elytron-oidc=WildFly Extension for Elytron OIDC
elytron-oidc.add=Add the Elytron OIDC subsystem
elytron-oidc.remove=Remove the Elytron OIDC subsystem
elytron-oidc.realm=A Keycloak realm
elytron-oidc.provider=An OpenID Connect provider
elytron-oidc.secure-deployment=A deployment secured by an OpenID Connect provider

elytron-oidc.realm.add=Add a realm definition to the subsystem
elytron-oidc.realm.remove=Remove a realm from the subsystem
elytron-oidc.realm.realm-public-key=Public key of the realm
elytron-oidc.realm.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc.realm.provider-url=The provider URL
elytron-oidc.realm.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc.realm.ssl-required=Specify if SSL is required (valid values are all, external and none)
elytron-oidc.realm.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc.realm.allow-any-hostname=SSL Setting
elytron-oidc.realm.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc.realm.truststore-password=Password of the Truststore
elytron-oidc.realm.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc.realm.enable-cors=Enable Keycloak CORS support
elytron-oidc.realm.client-keystore=n/a
elytron-oidc.realm.client-keystore-password=n/a
elytron-oidc.realm.client-key-password=n/a
elytron-oidc.realm.cors-max-age=CORS max-age header
elytron-oidc.realm.cors-allowed-headers=CORS allowed headers
elytron-oidc.realm.cors-allowed-methods=CORS allowed methods
elytron-oidc.realm.cors-exposed-headers=CORS exposed headers
elytron-oidc.realm.expose-token=Enable secure URL that exposes access token
elytron-oidc.realm.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc.realm.always-refresh-token=Refresh token on every single web request
elytron-oidc.realm.register-node-at-startup=Cluster setting
elytron-oidc.realm.register-node-period=how often to re-register node
elytron-oidc.realm.token-store=cookie or session storage for auth session data
elytron-oidc.realm.principal-attribute=token attribute to use to set Principal name
elytron-oidc.realm.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc.realm.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc.realm.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc.realm.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc.realm.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc.realm.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc.realm.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds

elytron-oidc.provider.add=Add a realm definition to the subsystem
elytron-oidc.provider.remove=Remove a realm from the subsystem
elytron-oidc.provider.realm-public-key=Public key of the realm
elytron-oidc.provider.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc.provider.provider-url=The provider URL
elytron-oidc.provider.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc.provider.ssl-required=Specify if SSL is required (valid values are all, external and none)
elytron-oidc.provider.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc.provider.allow-any-hostname=SSL Setting
elytron-oidc.provider.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc.provider.truststore-password=Password of the Truststore
elytron-oidc.provider.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc.provider.enable-cors=Enable Keycloak CORS support
elytron-oidc.provider.client-keystore=n/a
elytron-oidc.provider.client-keystore-password=n/a
elytron-oidc.provider.client-key-password=n/a
elytron-oidc.provider.cors-max-age=CORS max-age header
elytron-oidc.provider.cors-allowed-headers=CORS allowed headers
elytron-oidc.provider.cors-allowed-methods=CORS allowed methods
elytron-oidc.provider.cors-exposed-headers=CORS exposed headers
elytron-oidc.provider.expose-token=Enable secure URL that exposes access token
elytron-oidc.provider.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc.provider.always-refresh-token=Refresh token on every single web request
elytron-oidc.provider.register-node-at-startup=Cluster setting
elytron-oidc.provider.register-node-period=how often to re-register node
elytron-oidc.provider.token-store=cookie or session storage for auth session data
elytron-oidc.provider.principal-attribute=token attribute to use to set Principal name
elytron-oidc.provider.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc.provider.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc.provider.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc.provider.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc.provider.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc.provider.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc.provider.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds

elytron-oidc.secure-deployment.add=Add a deployment to be secured by an OpenID Connect provider
elytron-oidc.secure-deployment.remove=Remove a deployment to be secured by an OpenID Connect provider
elytron-oidc.secure-deployment.realm=Keycloak realm
elytron-oidc.secure-deployment.provider=OpenID provider
elytron-oidc.secure-deployment.realm-public-key=Public key of the realm
elytron-oidc.secure-deployment.auth-server-url=Base URL of the Realm Auth Server
elytron-oidc.secure-deployment.provider-url=The provider URL
elytron-oidc.secure-deployment.disable-trust-manager=Adapter will not use a trust manager when making adapter HTTPS requests
elytron-oidc.secure-deployment.ssl-required=Specify if SSL is required (valid values are all, external and none)
elytron-oidc.secure-deployment.confidential-port=Specify the confidential port (SSL/TLS) used by the Realm Auth Server
elytron-oidc.secure-deployment.allow-any-hostname=SSL Setting
elytron-oidc.secure-deployment.truststore=Truststore used for adapter client HTTPS requests
elytron-oidc.secure-deployment.truststore-password=Password of the Truststore
elytron-oidc.secure-deployment.connection-pool-size=Connection pool size for the client used by the adapter
elytron-oidc.secure-deployment.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc.secure-deployment.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc.secure-deployment.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds
elytron-oidc.secure-deployment.resource=Application name
elytron-oidc.secure-deployment.client-id=Client ID
elytron-oidc.secure-deployment.use-resource-role-mappings=Use resource level permissions from token
elytron-oidc.secure-deployment.redirect-rewrite-rule=Apply a rewrite rule for the redirect URI
elytron-oidc.secure-deployment.bearer-only=Bearer Token Auth only
elytron-oidc.secure-deployment.enable-basic-auth=Enable Basic Authentication
elytron-oidc.secure-deployment.public-client=Public client
elytron-oidc.secure-deployment.enable-cors=Enable Keycloak CORS support
elytron-oidc.secure-deployment.autodetect-bearer-only=autodetect bearer-only requests
elytron-oidc.secure-deployment.client-keystore=n/a
elytron-oidc.secure-deployment.client-keystore-password=n/a
elytron-oidc.secure-deployment.client-key-password=n/a
elytron-oidc.secure-deployment.cors-max-age=CORS max-age header
elytron-oidc.secure-deployment.cors-allowed-headers=CORS allowed headers
elytron-oidc.secure-deployment.cors-allowed-methods=CORS allowed methods
elytron-oidc.secure-deployment.cors-exposed-headers=CORS exposed headers
elytron-oidc.secure-deployment.expose-token=Enable secure URL that exposes access token
elytron-oidc.secure-deployment.auth-server-url-for-backend-requests=URL to use to make background calls to auth server
elytron-oidc.secure-deployment.always-refresh-token=Refresh token on every single web request
elytron-oidc.secure-deployment.register-node-at-startup=Cluster setting
elytron-oidc.secure-deployment.register-node-period=how often to re-register node
elytron-oidc.secure-deployment.token-store=cookie or session storage for auth session data
elytron-oidc.secure-deployment.principal-attribute=token attribute to use to set Principal name
elytron-oidc.secure-deployment.turn-off-change-session-id-on-login=The session id is changed by default on a successful login.  Change this to true if you want to turn this off
elytron-oidc.secure-deployment.token-minimum-time-to-live=The adapter will refresh the token if the current token is expired OR will expire in 'token-minimum-time-to-live' seconds or less
elytron-oidc.secure-deployment.min-time-between-jwks-requests=If adapter recognize token signed by unknown public key, it will try to download new public key from elytron-oidc server. However it won't try to download if already tried it in less than 'min-time-between-jwks-requests' seconds
elytron-oidc.secure-deployment.public-key-cache-ttl=Maximum time the downloaded public keys are considered valid. When this time reach, the adapter is forced to download public keys from elytron-oidc server
elytron-oidc.secure-deployment.ignore-oauth-query-parameter=disable query parameter parsing for access_token
elytron-oidc.secure-deployment.proxy-url=The URL for the HTTP proxy if one is used.
elytron-oidc.secure-deployment.verify-token-audience=If true, then during bearer-only authentication, the adapter will verify if token contains this client name (resource) as an audience
elytron-oidc.secure-deployment.adapter-state-cookie-path=If set, defines the path used in cookies set by the adapter. Useful when deploying the application in the root context path.
elytron-oidc.secure-deployment.credential=Credential used to communicate with the OpenID Connect provider
elytron-oidc.secure-deployment.credential.add=Add credentials used to communicate with the OpenID Connect provider
elytron-oidc.secure-deployment.credential.remove=Remove credentials used to communicate with the OpenID Connect provider
elytron-oidc.secure-deployment.credential.client-key-password=Client key password
elytron-oidc.secure-deployment.credential.client-keystore-password=Client keystore password
elytron-oidc.secure-deployment.credential.client-keystore-file=Client keystore file
elytron-oidc.secure-deployment.credential.client-keystore-type=Client keystore type
elytron-oidc.secure-deployment.credential.client-key-alias=Client key alias
elytron-oidc.secure-deployment.credential.token-timeout=Token timeout
elytron-oidc.secure-deployment.credential.secret=Secret
elytron-oidc.secure-deployment.credential.algorithm=Algorithm for signed JWT
elytron-oidc.secure-deployment.redirect-rewrite-rule.add=Add a rewrite rule for the redirect URI
elytron-oidc.secure-deployment.redirect-rewrite-rule.remove=Remove a rewrite rule for the redirect URI
elytron-oidc.secure-deployment.redirect-rewrite-rule.replacement=The replacement string
elytron-oidc.secure-deployment.socket-timeout-millis=Timeout for socket waiting for data in milliseconds
elytron-oidc.secure-deployment.connection-ttl-millis=Connection time to live in milliseconds
elytron-oidc.secure-deployment.connection-timeout-millis=Timeout for establishing the connection with the remote host in milliseconds


